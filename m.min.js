function collatz(seedNum){for(seed=seedNum,nums=[],steps=0;1!=seed;)seed%2==0?seed/=2:seed=3*seed+1,nums.push(seed),steps++;return{hailstones:nums,steps:steps}}function ePop(seed){return(val=seed)%2==0?val++:val--,val}function sum(array){return res=array[0],array.slice(1).forEach(a=>{res+=a}),res}function average(array){return sum(array)/array.length}class Equation{constructor(a){this.eq=a}calculate(){return eval(this.eq.replace("^","**"))}}function sqr(n){return n**2}function even(n){return n%2==0}function median(arr){if(!even(arr.length))return arr[Math.round((arr.length-1)/2)];throw new Error("List has an even number of items.")}var mode=a=>{a.sort((a,b)=>a-b);var d=1,f=a[0],b=1,e=a[0];for(let c=1;c<a.length;c++)a[c-1]!==a[c]&&(b>d&&(d=b,f=e),b=0,e=a[c]),b++;return b>d?e:f};class Dataset{constructor(a){this.ds=a}Median(){return median(this.ds)}Mean(){return average(this.ds)}Mode(){return mode(this.ds)}}function subArray(a){for(var longArray=a,smallerArrays=[],arraySize=2,i=0;i<Math.ceil(longArray.length/arraySize);i++)smallerArrays.push(longArray.slice(i*arraySize,i*arraySize+arraySize));return smallerArrays}function fms(e){return(eq=(eq=(eq=(eq=e).replaceAll("f(","<em>f</em>(")).replaceAll(" / "," &#247; ")).replaceAll("{","<sup>")).replaceAll("}","</sup>")}class AlgebraicEquation{constructor(a){this.eq=a.split(" = ")[0],this.ans=Number(a.split(" = ")[1])}solve(start=0,end="5000",varname="x",increment=1){for(let i=start;i<end;i+=increment)if(eval(this.eq.replaceAll(varname,i))==this.ans)return i;throw new Error("Equation is unsolvable.")}}function pythag(a,b){return Math.sqrt(a**2+b**2)}function factorialize(num){return num<0?-1:0==num?1:num*factorialize(num-1)}JMath={Number:a=>Number(a.toFixed(12)),isFloat:a=>parseInt(a)===Number(a),etr:a=>a.toLocaleString().replaceAll(",",""),addCommas:a=>a.toLocaleString(),factorialize:factorialize,ftpConfig:{def:0,am:50,on:!1},formulas:{on:!1,mechanism:"new Function()"},sin:Math.sin,cos:Math.cos,tan:Math.tan};let[sin,cos,tan]=[JMath.sin,JMath.cos,JMath.tan],[jm,JM,jmath,JMATH,math]=Array(5).fill(JMath);function formulaToPoints(f,i){let arr=[];if(!jm.ftpConfig.on){console.table(jm.ftpConfig),console.log("jm.ftpConfig.on = true");return}"function"!=typeof f&&console.log("F->Function"),"number"!=typeof i&&console.log("i->Number()");for(let v=jm.ftpConfig.def;v<jm.ftpConfig.am;v+=i)arr.push(`(${v}, ${f(v)})`);return arr.join(", ")}function formula(variables,eq){if(!jm.formulas.on){console.table(jm.formulas),console.log("jm.formulas.on = true"),console.log("warning: runs code, so dont let user input get in");return}return new Function(variables,`return ${eq}`)}Num=function(){return function(){return jmath.Number(+arguments[0])}};class jRange{constructor(a,b,c=1){this.min=a,this.max=b,this.in=c}has(a){return a>=this.min&&a<=this.max}bet(a){return a>this.min&&a<this.max}use(b){for(let a=this.min-1;a<this.max;a+=this.in)b(a+1)}}
